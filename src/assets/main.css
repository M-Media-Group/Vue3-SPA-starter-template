@import "@picocss/pico";
@import "./form.css";

body {
  min-height: 100vh;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

main {
  gap: 40px;
  display: flex;
  flex-direction: column;
}

main>* {
  margin-bottom: 0;
  margin-top: 0;
}

nav~main {
  margin-top: 40px;
}

main~footer {
  margin-top: 40px;
}

dialog>*>article {
  width: unset;
}

article>header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 32px;
}

/* Article/cards header and footer children should not have a margin-bottom */
article>header>div>*,
article>footer>* {
  margin-bottom: 0px;
}

/* If the articles last child is not a footer, remove margin-bottom */
article>:last-child:not(footer) {
  margin-bottom: 0;
}

/* If the last child is the header,  */
article>:last-child:is(header) {
  margin-bottom: calc(var(--pico-block-spacing-vertical)* -2);
}

/* If the .images are the first child, remove margin-top and add a margin-bottom */
article>:first-child:is(.images) {
  margin-top: calc(var(--pico-block-spacing-vertical)* -1);
  margin-bottom: var(--pico-block-spacing-vertical);
  margin-left: calc(var(--pico-block-spacing-horizontal)* -1);
  margin-right: calc(var(--pico-block-spacing-horizontal)* -1);

  width: calc(100% + var(--pico-block-spacing-horizontal)* 2);
}

/* If the last child is images, remove margin-bottom */
article>:last-child:is(.images) {
  margin-bottom: calc(var(--pico-block-spacing-vertical)* -1);
}

/* If the last child is the footer, remove the margin-top */
article>:first-child:is(footer) {
  margin-top: calc(var(--pico-block-spacing-vertical)* -1);
}

/* make a simple slider with flex */
.images {
  width: 100%;
  overflow-y: scroll;
  display: flex;
  max-height: 400px;

  /* Scroll snap */
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  scroll-padding: 0 10px;

}

.images>img {
  width: 90%;
  height: auto;
  object-fit: cover;
  flex-shrink: 0;
}

a:has(>article),
a:has(>article):is([aria-current]) {
  display: block;
  text-decoration: none;
  color: inherit;
  --pico-color: var(--pico-text-color);
}

a:has(>article):hover {
  text-decoration: none;
  color: inherit;
  --pico-color: var(--pico-text-color);
}

main~footer ul {
  display: flex;
  align-items: center;
  margin-bottom: 0;
  padding: 0;
  list-style: none;
  display: flex;
  align-items: baseline;
  justify-content: space-between;
}

main~footer ul>li {
  list-style: none;
}

nav form {
  margin: 0;
}

.page-progress {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1000;
}

/* Fixes iframe (especially for 3DS from Stripe) not being inter-actable due to parent modal pointer-event setting */
.modal-is-open iframe {
  pointer-events: initial;
}

/* we will explain what these classes do next! */
.v-enter-active,
.v-leave-active {
  transition: opacity 0.5s ease;
}

.v-enter-from,
.v-leave-to {
  opacity: 0;
}

/* If there's an label and the next element is a required input/select, add a star to the label */
label:has(+input:required)::after,
label:has(+textarea:required)::after,
label:has(+select:required)::after,
/* If label has child checkbox, the text will be after the child input */
label:has(>input[type="checkbox"]:required)::after,
label:has(>input[type="radio"]:required)::after {
  content: "*";
  color: var(--pico-del-color);
  margin-left: calc(var(--pico-nav-link-spacing-vertical) / 2);
}